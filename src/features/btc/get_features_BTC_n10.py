"""Apply financial indicator calculations using the talib package.


"""

CLOSE = 'close'
VOLUME = 'volume'


def get_features(df):
    from etl import talib
    from etl import talib_features
    
    """
    FINANCIAL INDICATORS
    """

    # outcome variables
    df = talib.ROR(df, -1)
    df = talib.ROR(df, -3)
    df = talib.ROR(df, -5)
    df = talib.ROR(df, -10)
    df = talib.ROR(df, -15)
    df = talib.ROR(df, -20)
    df = talib.ROR(df, -25)
    df = talib.ROR(df, -30)

    # date features
    df = talib_features.get_date_variables(df)
    df = talib_features.onehot_encoding(df, 'month')
    df = talib_features.onehot_encoding(df, 'quarter')
    
    # input variables: AROR
    df = talib.AROR(df, 1)
    df = talib.AROR(df, 2)
    df = talib.AROR(df, 3)
    df = talib.AROR(df, 4)
    df = talib.AROR(df, 5)
    df = talib.AROR(df, 6)
    df = talib.AROR(df, 7)
    df = talib.AROR(df, 8)
    df = talib.AROR(df, 9)
    df = talib.AROR(df, 10)
    df = talib.AROR(df, 15)
    df = talib.AROR(df, 20)
    df = talib.AROR(df, 25)
    df = talib.AROR(df, 30)
    df = talib.AROR(df, 40)
    df = talib.AROR(df, 50)
    df = talib.AROR(df, 60)
    df = talib.AROR(df, 70)
    df = talib.AROR(df, 80)
    df = talib.AROR(df, 90)
    df = talib.AROR(df, 100)
    df = talib.AROR(df, 110)
    df = talib.AROR(df, 120)
    df = talib.AROR(df, 130)
    df = talib.AROR(df, 140)
    df = talib.AROR(df, 150)
    df = talib.AROR(df, 160)
    df = talib.AROR(df, 170)
    df = talib.AROR(df, 180)
    df = talib.AROR(df, 190)
    df = talib.AROR(df, 200)
    df = talib.AROR(df, 250)
    df = talib.AROR(df, 300)

    # close price EMA
    df = talib.EMA(df, 3)
    df = talib.EMA(df, 4)
    df = talib.EMA(df, 5)    
    df = talib.EMA(df, 10)
    df = talib.EMA(df, 15)
    df = talib.EMA(df, 20)
    df = talib.EMA(df, 25)
    df = talib.EMA(df, 30)
    df = talib.EMA(df, 50)
    df = talib.EMA(df, 75)
    df = talib.EMA(df, 100)
    df = talib.EMA(df, 150)
    df = talib.EMA(df, 175)
    df = talib.EMA(df, 200)
    
    # volume indicators
    df = talib.EMA(df, 3, VOLUME)
    df = talib.EMA(df, 5, VOLUME)
    df = talib.EMA(df, 10, VOLUME)
    df = talib.EMA(df, 15, VOLUME)
    df = talib.EMA(df, 20, VOLUME)
    df = talib.EMA(df, 25, VOLUME)
    df = talib.EMA(df, 50, VOLUME)
    df = talib.EMA(df, 100, VOLUME)
    df = talib.EMA(df, 200, VOLUME)
    
    # Avg True Range
    df = talib.ATR(df, 3)
    df = talib.ATR(df, 4)
    df = talib.ATR(df, 5)
    df = talib.ATR(df, 6)
    df = talib.ATR(df, 7)
    df = talib.ATR(df, 8)
    df = talib.ATR(df, 9)
    df = talib.ATR(df, 10)
    df = talib.ATR(df, 15)
    df = talib.ATR(df, 20)
    df = talib.ATR(df, 30)
    df = talib.ATR(df, 40)
    df = talib.ATR(df, 50)
    df = talib.ATR(df, 60)
    df = talib.ATR(df, 70)
    df = talib.ATR(df, 80)
    df = talib.ATR(df, 90)
    df = talib.ATR(df, 100)
    df = talib.ATR(df, 110)
    df = talib.ATR(df, 120)
    df = talib.ATR(df, 130)
    df = talib.ATR(df, 140)
    df = talib.ATR(df, 150)
    df = talib.ATR(df, 160)
    df = talib.ATR(df, 170)
    df = talib.ATR(df, 180)
    df = talib.ATR(df, 190)
    df = talib.ATR(df, 200)
    
    # Bollinger Bands
    df = talib.BBANDS(df, 5)
    df = talib.BBANDS(df, 10)
    df = talib.BBANDS(df, 15)
    df = talib.BBANDS(df, 20)
    df = talib.BBANDS(df, 25)
    df = talib.BBANDS(df, 30)
    df = talib.BBANDS(df, 40)
    df = talib.BBANDS(df, 50)
    df = talib.BBANDS(df, 60)
    df = talib.BBANDS(df, 70)
    df = talib.BBANDS(df, 80)
    df = talib.BBANDS(df, 90)
    df = talib.BBANDS(df, 100)
    df = talib.BBANDS(df, 110)
    df = talib.BBANDS(df, 120)
    df = talib.BBANDS(df, 130)
    df = talib.BBANDS(df, 140)
    df = talib.BBANDS(df, 150)
    df = talib.BBANDS(df, 160)
    df = talib.BBANDS(df, 170)
    df = talib.BBANDS(df, 180)
    df = talib.BBANDS(df, 190)
    df = talib.BBANDS(df, 200)
    
    # MACD
    df = talib.MACD(df, 10, 20)
    df = talib.MACD(df, 12, 26)
    df = talib.MACD(df, 9, 12)
    df = talib.MACD(df, 26, 200)
    df = talib.MACD(df, 20, 200)
    
    # Stochastic Osc EMA
    df = talib.STO_EMA(df, nK=10, nD=1, nS=1)
    df = talib.STO_EMA(df, nK=20, nD=5, nS=1)
    df = talib.STO_EMA(df, nK=30, nD=10, nS=1)
    df = talib.STO_EMA(df, nK=40, nD=10, nS=1)
    df = talib.STO_EMA(df, nK=50, nD=10, nS=1)
    df = talib.STO_EMA(df, nK=60, nD=10, nS=1)
    df = talib.STO_EMA(df, nK=70, nD=10, nS=1)
    df = talib.STO_EMA(df, nK=80, nD=10, nS=1)
    df = talib.STO_EMA(df, nK=90, nD=10, nS=1)
    df = talib.STO_EMA(df, nK=100, nD=10, nS=1)

    df = talib.STO_EMA(df, nK=10, nD=1, nS=5)    # default nS=5
    df = talib.STO_EMA(df, nK=20, nD=5, nS=5)
    df = talib.STO_EMA(df, nK=30, nD=10, nS=5)
    df = talib.STO_EMA(df, nK=40, nD=10, nS=5)
    df = talib.STO_EMA(df, nK=50, nD=10, nS=5)
    df = talib.STO_EMA(df, nK=60, nD=10, nS=5)
    df = talib.STO_EMA(df, nK=70, nD=10, nS=5)
    df = talib.STO_EMA(df, nK=80, nD=10, nS=5)
    df = talib.STO_EMA(df, nK=90, nD=10, nS=5)
    df = talib.STO_EMA(df, nK=100, nD=10, nS=5)

    # Other indicators
    df = talib.RSI(df, 10)
    df = talib.RSI(df, 20)
    df = talib.RSI(df, 30)
    df = talib.RSI(df, 40)
    df = talib.RSI(df, 50)
    df = talib.RSI(df, 100)
    df = talib.RSI(df, 150)
    df = talib.RSI(df, 200)
    df = talib.MassI(df)
    df = talib.STOK(df)
    df = talib.ACCDIST(df, n=5)
    df = talib.ACCDIST(df, n=10)
    df = talib.ACCDIST(df, n=50)
    
    df = talib.Vortex(df, n=5)
    df = talib.Vortex(df, n=10)
    df = talib.Vortex(df, n=20)
    df = talib.Vortex(df, n=50)
    
    
    """
    FEATURE ENGINEERING
    """

    # trailing min over n-periods
    df = talib_features.SM_MIN(df, n=3)
    df = talib_features.SM_MIN(df, n=4)
    df = talib_features.SM_MIN(df, n=5)
    df = talib_features.SM_MIN(df, n=6)
    df = talib_features.SM_MIN(df, n=7)
    df = talib_features.SM_MIN(df, n=8)
    df = talib_features.SM_MIN(df, n=9)    
    df = talib_features.SM_MIN(df, n=10)
    df = talib_features.SM_MIN(df, n=20)
    df = talib_features.SM_MIN(df, n=30)
    df = talib_features.SM_MIN(df, n=40)
    df = talib_features.SM_MIN(df, n=50)
    df = talib_features.SM_MIN(df, n=100)
    df = talib_features.SM_MIN(df, n=200)
    
    # trailing max over n-periods
    df = talib_features.SM_MAX(df, n=3)
    df = talib_features.SM_MAX(df, n=4)
    df = talib_features.SM_MAX(df, n=5)
    df = talib_features.SM_MAX(df, n=6)
    df = talib_features.SM_MAX(df, n=7)
    df = talib_features.SM_MAX(df, n=8)
    df = talib_features.SM_MAX(df, n=9)
    df = talib_features.SM_MAX(df, n=10)
    df = talib_features.SM_MAX(df, n=20)
    df = talib_features.SM_MAX(df, n=30)
    df = talib_features.SM_MAX(df, n=40)
    df = talib_features.SM_MAX(df, n=50)
    df = talib_features.SM_MAX(df, n=100)
    df = talib_features.SM_MAX(df, n=200)
    
    # log (min+t0 / min+t1)
    df = talib_features.RATIO_LOG(df, 'MIN_5', 'MIN_10', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MIN_5', 'MIN_20', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MIN_5', 'MIN_30', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MIN_5', 'MIN_40', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MIN_5', 'MIN_50', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MIN_10', 'MIN_10', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MIN_10', 'MIN_20', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MIN_10', 'MIN_30', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MIN_10', 'MIN_40', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MIN_10', 'MIN_50', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MIN_20', 'MIN_50', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MIN_20', 'MIN_100', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MIN_20', 'MIN_200', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MIN_50', 'MIN_100', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MIN_50', 'MIN_200', 0, 0)
    
    # log (max+t0 / max+t1)
    df = talib_features.RATIO_LOG(df, 'MAX_5', 'MAX_10', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MAX_5', 'MAX_20', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MAX_5', 'MAX_30', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MAX_5', 'MAX_40', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MAX_5', 'MAX_50', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MAX_10', 'MAX_10', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MAX_10', 'MAX_20', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MAX_10', 'MAX_30', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MAX_10', 'MAX_40', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MAX_10', 'MAX_50', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MAX_20', 'MAX_50', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MAX_20', 'MAX_100', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MAX_20', 'MAX_200', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MAX_50', 'MAX_100', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MAX_50', 'MAX_200', 0, 0)

    # log ratio min/max
    df = talib_features.RATIO_LOG(df, 'MIN_5', 'MAX_5', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MIN_10', 'MAX_10', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MIN_20', 'MAX_20', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MIN_50', 'MAX_50', 0, 0)
    df = talib_features.RATIO_LOG(df, 'MIN_100', 'MAX_100', 0, 0)

    # AROR differences by time period 
    df = talib_features.DIFF(df, 'AROR_1', 'AROR_3')
    df = talib_features.DIFF(df, 'AROR_1', 'AROR_5')
    df = talib_features.DIFF(df, 'AROR_1', 'AROR_10')
    df = talib_features.DIFF(df, 'AROR_1', 'AROR_15')
    df = talib_features.DIFF(df, 'AROR_1', 'AROR_20')
    df = talib_features.DIFF(df, 'AROR_1', 'AROR_25')
    df = talib_features.DIFF(df, 'AROR_1', 'AROR_50')

    df = talib_features.DIFF(df, 'AROR_3', 'AROR_5')
    df = talib_features.DIFF(df, 'AROR_3', 'AROR_10')
    df = talib_features.DIFF(df, 'AROR_3', 'AROR_15')
    df = talib_features.DIFF(df, 'AROR_3', 'AROR_20')
    df = talib_features.DIFF(df, 'AROR_3', 'AROR_25')
    df = talib_features.DIFF(df, 'AROR_3', 'AROR_50')

    df = talib_features.DIFF(df, 'AROR_5', 'AROR_10')
    df = talib_features.DIFF(df, 'AROR_5', 'AROR_15')
    df = talib_features.DIFF(df, 'AROR_5', 'AROR_20')
    df = talib_features.DIFF(df, 'AROR_5', 'AROR_25')
    df = talib_features.DIFF(df, 'AROR_5', 'AROR_50')
    df = talib_features.DIFF(df, 'AROR_5', 'AROR_100')

    df = talib_features.DIFF(df, 'AROR_10', 'AROR_20')
    df = talib_features.DIFF(df, 'AROR_10', 'AROR_25')
    df = talib_features.DIFF(df, 'AROR_10', 'AROR_50')
    df = talib_features.DIFF(df, 'AROR_10', 'AROR_100')
    df = talib_features.DIFF(df, 'AROR_10', 'AROR_150')
    df = talib_features.DIFF(df, 'AROR_10', 'AROR_200')

    # EMA Ratios
    df = talib_features.RATIO_LOG(df, 'EMA_3', 'EMA_5')
    df = talib_features.RATIO_LOG(df, 'EMA_3', 'EMA_10')
    df = talib_features.RATIO_LOG(df, 'EMA_3', 'EMA_15')
    df = talib_features.RATIO_LOG(df, 'EMA_5', 'EMA_10')
    df = talib_features.RATIO_LOG(df, 'EMA_5', 'EMA_15')
    df = talib_features.RATIO_LOG(df, 'EMA_5', 'EMA_20')
    df = talib_features.RATIO_LOG(df, 'EMA_5', 'EMA_25')
    df = talib_features.RATIO_LOG(df, 'EMA_5', 'EMA_50')
    df = talib_features.RATIO_LOG(df, 'EMA_5', 'EMA_100')
    df = talib_features.RATIO_LOG(df, 'EMA_5', 'EMA_200')
    df = talib_features.RATIO_LOG(df, 'EMA_10', 'EMA_15')
    df = talib_features.RATIO_LOG(df, 'EMA_10', 'EMA_25')
    df = talib_features.RATIO_LOG(df, 'EMA_10', 'EMA_50')
    df = talib_features.RATIO_LOG(df, 'EMA_10', 'EMA_100')
    df = talib_features.RATIO_LOG(df, 'EMA_10', 'EMA_200')
    df = talib_features.RATIO_LOG(df, 'EMA_25', 'EMA_50')
    df = talib_features.RATIO_LOG(df, 'EMA_25', 'EMA_100')
    df = talib_features.RATIO_LOG(df, 'EMA_25', 'EMA_200')
    df = talib_features.RATIO_LOG(df, 'EMA_50', 'EMA_100')
    df = talib_features.RATIO_LOG(df, 'EMA_50', 'EMA_200')

    # Relative Volume EMA
    df = talib_features.RATIO_LOG(df, VOLUME, 'EMA_volume_3')
    df = talib_features.RATIO_LOG(df, VOLUME, 'EMA_volume_5')
    df = talib_features.RATIO_LOG(df, VOLUME, 'EMA_volume_10')
    df = talib_features.RATIO_LOG(df, 'EMA_volume_3', 'EMA_volume_10')
    df = talib_features.RATIO_LOG(df, 'EMA_volume_5', 'EMA_volume_10')
    df = talib_features.RATIO_LOG(df, 'EMA_volume_3', 'EMA_volume_15')
    df = talib_features.RATIO_LOG(df, 'EMA_volume_5', 'EMA_volume_15')
    df = talib_features.RATIO_LOG(df, 'EMA_volume_10', 'EMA_volume_15')

    # price action: close prices vs recent history close
    df = talib_features.RATIO(df, CLOSE, CLOSE,  0, 3)
    df = talib_features.RATIO(df, CLOSE, CLOSE,  0, 5)
    df = talib_features.RATIO(df, CLOSE, CLOSE,  0, 10)
    df = talib_features.RATIO(df, CLOSE, CLOSE,  0, 15)
    df = talib_features.RATIO(df, CLOSE, CLOSE,  0, 30)
    df = talib_features.RATIO(df, CLOSE, CLOSE,  3, 5)
    df = talib_features.RATIO(df, CLOSE, CLOSE,  3, 10)
    df = talib_features.RATIO(df, CLOSE, CLOSE,  3, 15)
    df = talib_features.RATIO(df, CLOSE, CLOSE,  5, 10)
    df = talib_features.RATIO(df, CLOSE, CLOSE,  5, 15)
    df = talib_features.RATIO(df, CLOSE, CLOSE,  5, 30)
    df = talib_features.RATIO(df, CLOSE, CLOSE,  10, 15)
    df = talib_features.RATIO(df, CLOSE, CLOSE,  10, 30)
    df = talib_features.RATIO(df, CLOSE, CLOSE,  10, 60)
    df = talib_features.RATIO(df, CLOSE, CLOSE,  10, 90)
    df = talib_features.RATIO(df, CLOSE, CLOSE,  15, 30)
    df = talib_features.RATIO(df, CLOSE, CLOSE,  15, 60)
    df = talib_features.RATIO(df, CLOSE, CLOSE,  15, 90)
    
    return df

